{"version":3,"file":"static/js/432.e5f35c85.chunk.js","mappings":"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","sources":["components/RegisterForm/RegisterForm.jsx","components/LoginForm/LoginForm.jsx","webpack://phonebook-frontend/./src/components/AuthPagesContent/AuthPagesContent.module.css?e740","components/AuthPagesContent/AuthPagesContent.jsx","webpack://phonebook-frontend/./src/components/Container/Container.module.css?9f71","components/Container/Container.jsx","webpack://phonebook-frontend/./src/components/Form/Form.module.css?89ba","components/Form/Form.jsx","webpack://phonebook-frontend/./src/components/Input/Input.module.css?1f33","components/Input/Input.jsx","webpack://phonebook-frontend/./src/components/Section/Section.module.css?dbe8","components/Section/Section.jsx","pages/RegisterPage.jsx","../node_modules/nanoid/index.browser.js"],"sourcesContent":["import { useDispatch } from 'react-redux';\nimport { register } from 'Redux/auth/operations';\nimport Input from 'components/Input/Input';\nimport Form from 'components/Form/Form';\n\nconst RegisterForm = () => {\n  const dispatch = useDispatch();\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    const form = e.currentTarget;\n    dispatch(\n      register({\n        name: form.elements.name.value,\n        email: form.elements.email.value,\n        password: form.elements.password.value,\n      })\n    );\n    form.reset();\n  };\n\n  return (\n    <Form buttonCaption=\"Register\" onSubmit={handleSubmit}>\n      <Input\n        label=\"Username\"\n        type=\"text\"\n        name=\"name\"\n        pattern=\"^[A-Za-z\\u0080-\\uFFFF\\- ']+$\"\n        title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n      />\n\n      <Input label=\"Email\" type=\"email\" name=\"email\" />\n\n      <Input label=\"Password\" type=\"password\" name=\"password\" minLength=\"8\" />\n    </Form>\n  );\n};\n\nexport default RegisterForm;\n","import { useDispatch } from 'react-redux';\nimport { logIn } from 'Redux/auth/operations';\nimport Input from 'components/Input/Input';\nimport Form from 'components/Form/Form';\n\nconst LoginForm = () => {\n  const dispatch = useDispatch();\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    const form = e.currentTarget;\n    dispatch(\n      logIn({\n        email: form.elements.email.value,\n        password: form.elements.password.value,\n      })\n    );\n    form.reset();\n  };\n\n  return (\n    <Form buttonCaption=\"Login\" onSubmit={handleSubmit}>\n      <Input label=\"Email\" type=\"email\" name=\"email\" />\n\n      <Input label=\"Password\" type=\"password\" name=\"password\" minLength=\"8\" />\n    </Form>\n  );\n};\n\nexport default LoginForm;\n","// extracted by mini-css-extract-plugin\nexport default {\"formBox\":\"AuthPagesContent_formBox__pN12I\"};","import RegisterForm from 'components/RegisterForm';\nimport LoginForm from 'components/LoginForm';\nimport Section from 'components/Section/Section';\nimport Container from 'components/Container';\nimport css from './AuthPagesContent.module.css';\n\nconst AuthPagesContent = ({ page }) => {\n  return (\n    <Section>\n      <Container>\n        <h1 className=\"title\">{page}</h1>\n        <div className={css.formBox}>{page === 'Login' ? <LoginForm /> : <RegisterForm />}</div>\n      </Container>\n    </Section>\n  );\n};\n\nexport default AuthPagesContent;\n","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"Container_container__VVOCq\"};","import PropTypes from 'prop-types';\nimport css from './Container.module.css';\n\nconst Container = ({ children }) => {\n  return <div className={css.container}>{children}</div>;\n};\n\nContainer.propTypes = {\n  children: PropTypes.node.isRequired,\n};\n\nexport default Container;\n","// extracted by mini-css-extract-plugin\nexport default {\"form\":\"Form_form__e1yzW\",\"button\":\"Form_button__8NOIT\"};","import css from './Form.module.css';\n\nconst Form = ({ buttonCaption, onSubmit, children }) => {\n  return (\n    <form className={css.form} onSubmit={onSubmit}>\n      {children}\n      <button className={css.button} type=\"submit\">\n        {buttonCaption}\n      </button>\n    </form>\n  );\n};\n\nexport default Form;\n","// extracted by mini-css-extract-plugin\nexport default {\"label\":\"Input_label__NXpCD\",\"input\":\"Input_input__E5rzA\"};","import { useRef } from 'react';\nimport { nanoid } from 'nanoid';\nimport css from './Input.module.css';\n\nconst Input = ({\n  onChange,\n  type = 'text',\n  name = '',\n  label,\n  title,\n  pattern,\n  required = true,\n  minLength,\n  value,\n}) => {\n  const inputId = useRef(nanoid());\n  return (\n    <>\n      {label && (\n        <label htmlFor={inputId.current} className={css.label}>\n          {label}\n        </label>\n      )}\n      <input\n        id={inputId.current}\n        className={css.input}\n        type={type}\n        name={name}\n        value={value}\n        pattern={pattern}\n        title={title}\n        required={required}\n        onChange={onChange}\n        minLength={minLength}\n      />\n    </>\n  );\n};\n\nexport default Input;\n","// extracted by mini-css-extract-plugin\nexport default {\"section\":\"Section_section__Z2PLw\"};","import css from './Section.module.css';\n\nconst Section = ({ children }) => {\n  return <section className={css.section}>{children}</section>;\n};\n\nexport default Section;\n","import AuthPagesContent from 'components/AuthPagesContent/AuthPagesContent';\n\nconst RegisterPage = () => {\n  return <AuthPagesContent page=\"Register\" />;\n};\n\nexport default RegisterPage;\n","export { urlAlphabet } from './url-alphabet/index.js'\nexport let random = bytes => crypto.getRandomValues(new Uint8Array(bytes))\nexport let customRandom = (alphabet, defaultSize, getRandom) => {\n  let mask = (2 << (Math.log(alphabet.length - 1) / Math.LN2)) - 1\n  let step = -~((1.6 * mask * defaultSize) / alphabet.length)\n  return (size = defaultSize) => {\n    let id = ''\n    while (true) {\n      let bytes = getRandom(step)\n      let j = step\n      while (j--) {\n        id += alphabet[bytes[j] & mask] || ''\n        if (id.length === size) return id\n      }\n    }\n  }\n}\nexport let customAlphabet = (alphabet, size = 21) =>\n  customRandom(alphabet, size, random)\nexport let nanoid = (size = 21) =>\n  crypto.getRandomValues(new Uint8Array(size)).reduce((id, byte) => {\n    byte &= 63\n    if (byte < 36) {\n      id += byte.toString(36)\n    } else if (byte < 62) {\n      id += (byte - 26).toString(36).toUpperCase()\n    } else if (byte > 62) {\n      id += '-'\n    } else {\n      id += '_'\n    }\n    return id\n  }, '')\n"],"names":["dispatch","useDispatch","Form","buttonCaption","onSubmit","e","preventDefault","form","currentTarget","register","name","elements","value","email","password","reset","Input","label","type","pattern","title","minLength","logIn","page","Section","Container","className","css","children","onChange","required","inputId","useRef","nanoid","htmlFor","current","id","size","crypto","getRandomValues","Uint8Array","reduce","byte","toString","toUpperCase"],"sourceRoot":""}