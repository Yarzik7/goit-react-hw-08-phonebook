{"version":3,"file":"static/js/501.ebe83979.chunk.js","mappings":"6JACA,MAAuB,mBAAvB,EAAmD,qB,SCYnD,EAXa,SAAC,GAA2C,IAAzCA,EAAwC,EAAxCA,cAAeC,EAAyB,EAAzBA,SAAUC,EAAe,EAAfA,SACvC,OACE,kBAAMC,UAAWC,EAAUH,SAAUA,EAArC,UACGC,GACD,mBAAQC,UAAWC,EAAYC,KAAK,SAApC,SACGL,MAIR,C,+ECVD,EAAwB,qBAAxB,EAAqD,qB,SCuCrD,EApCc,SAAC,GAUR,IATLM,EASI,EATJA,SASI,IARJD,KAAAA,OAQI,MARG,OAQH,MAPJE,KAAAA,OAOI,MAPG,GAOH,EANJC,EAMI,EANJA,MACAC,EAKI,EALJA,MACAC,EAII,EAJJA,QAII,IAHJC,SAAAA,OAGI,SAFJC,EAEI,EAFJA,UACAC,EACI,EADJA,MAEMC,GAAUC,EAAAA,EAAAA,SAAOC,EAAAA,EAAAA,OAEvB,OACE,gCACGR,IACC,kBAAOS,QAASH,EAAQI,QAASf,UAAWC,EAA5C,SACGI,KAGL,kBACEW,GAAIL,EAAQI,QACZf,UAAWC,EACXC,KAAMA,EACNE,KAAMA,EACNM,MAAOA,EACPH,QAASA,EACTD,MAAOA,EACPE,SAAUA,EACVL,SAAUA,EACVM,UAAWA,MAIlB,C,wHCTD,EAxBkB,WAChB,IAAMQ,GAAWC,EAAAA,EAAAA,MAcjB,OACE,UAACC,EAAA,EAAD,CAAMrB,SAba,SAAAsB,GACnBA,EAAEC,iBACF,IAAMC,EAAOF,EAAEG,cACfN,GACEO,EAAAA,EAAAA,IAAM,CACJC,MAAOH,EAAKI,SAASD,MAAMf,MAC3BiB,SAAUL,EAAKI,SAASC,SAASjB,SAGrCY,EAAKM,OACN,EAGC,WACE,SAACC,EAAA,EAAD,CAAOxB,MAAM,QAAQH,KAAK,QAAQE,KAAK,WAEvC,SAACyB,EAAA,EAAD,CAAOxB,MAAM,WAAWH,KAAK,WAAWE,KAAK,WAAWK,UAAU,QAGvE,E,UCfD,EATkB,WAChB,OACE,iCACE,eAAIT,UAAWC,EAAAA,EAAAA,SAAf,SAA6B,WAC7B,SAAC,EAAD,MAGL,C,qBCTD,KAAgB,IAAM,iBAAiB,SAAW,sBAAsB,KAAO,kB,wDCAxE,IAkBIY,EAAS,eAACiB,EAAD,uDAAQ,GAAR,OAClBC,OAAOC,gBAAgB,IAAIC,WAAWH,IAAOI,QAAO,SAAClB,EAAImB,GAWvD,OAREnB,IAFFmB,GAAQ,IACG,GACHA,EAAKC,SAAS,IACXD,EAAO,IACTA,EAAO,IAAIC,SAAS,IAAIC,cACtBF,EAAO,GACV,IAEA,GAGT,GAAE,GAbe,C","sources":["webpack://phonebook-frontend/./src/components/Form/Form.module.css?89ba","components/Form/Form.jsx","webpack://phonebook-frontend/./src/components/Input/Input.module.css?1f33","components/Input/Input.jsx","components/LoginForm/LoginForm.jsx","pages/LoginPage.jsx","webpack://phonebook-frontend/./src/components/App/App.module.css?583a","../node_modules/nanoid/index.browser.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"form\":\"Form_form__e1yzW\",\"button\":\"Form_button__8NOIT\"};","import css from './Form.module.css';\n\nconst Form = ({ buttonCaption, onSubmit, children }) => {\n  return (\n    <form className={css.form} onSubmit={onSubmit}>\n      {children}\n      <button className={css.button} type=\"submit\">\n        {buttonCaption}\n      </button>\n    </form>\n  );\n};\n\nexport default Form;\n","// extracted by mini-css-extract-plugin\nexport default {\"label\":\"Input_label__NXpCD\",\"input\":\"Input_input__E5rzA\"};","import { useRef } from 'react';\nimport { nanoid } from 'nanoid';\nimport css from './Input.module.css';\n\nconst Input = ({\n  onChange,\n  type = 'text',\n  name = '',\n  label,\n  title,\n  pattern,\n  required = true,\n  minLength,\n  value,\n}) => {\n  const inputId = useRef(nanoid());\n\n  return (\n    <>\n      {label && (\n        <label htmlFor={inputId.current} className={css.label}>\n          {label}\n        </label>\n      )}\n      <input\n        id={inputId.current}\n        className={css.input}\n        type={type}\n        name={name}\n        value={value}\n        pattern={pattern}\n        title={title}\n        required={required}\n        onChange={onChange}\n        minLength={minLength}\n      />\n    </>\n  );\n};\n\nexport default Input;\n","import { useDispatch } from 'react-redux';\nimport { logIn } from 'Redux/auth/operations';\nimport Input from 'components/Input/Input';\nimport Form from 'components/Form/Form';\n\nconst LoginForm = () => {\n  const dispatch = useDispatch();\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    const form = e.currentTarget;\n    dispatch(\n      logIn({\n        email: form.elements.email.value,\n        password: form.elements.password.value,\n      })\n    );\n    form.reset();\n  };\n\n  return (\n    <Form onSubmit={handleSubmit}>\n      <Input label=\"Email\" type=\"email\" name=\"email\" />\n\n      <Input label=\"Password\" type=\"password\" name=\"password\" minLength=\"8\" />\n    </Form>\n  );\n};\n\nexport default LoginForm;\n","import LoginForm from 'components/LoginForm/LoginForm';\nimport css from 'components/App/App.module.css';\n\nconst LoginPage = () => {\n  return (\n    <>\n      <h1 className={css.appTitle}>Login</h1>\n      <LoginForm />\n    </>\n  );\n};\n\nexport default LoginPage;\n","// extracted by mini-css-extract-plugin\nexport default {\"app\":\"App_app__6Ra7L\",\"appTitle\":\"App_appTitle__R-ohI\",\"info\":\"App_info__qU+g4\"};","export { urlAlphabet } from './url-alphabet/index.js'\nexport let random = bytes => crypto.getRandomValues(new Uint8Array(bytes))\nexport let customRandom = (alphabet, defaultSize, getRandom) => {\n  let mask = (2 << (Math.log(alphabet.length - 1) / Math.LN2)) - 1\n  let step = -~((1.6 * mask * defaultSize) / alphabet.length)\n  return (size = defaultSize) => {\n    let id = ''\n    while (true) {\n      let bytes = getRandom(step)\n      let j = step\n      while (j--) {\n        id += alphabet[bytes[j] & mask] || ''\n        if (id.length === size) return id\n      }\n    }\n  }\n}\nexport let customAlphabet = (alphabet, size = 21) =>\n  customRandom(alphabet, size, random)\nexport let nanoid = (size = 21) =>\n  crypto.getRandomValues(new Uint8Array(size)).reduce((id, byte) => {\n    byte &= 63\n    if (byte < 36) {\n      id += byte.toString(36)\n    } else if (byte < 62) {\n      id += (byte - 26).toString(36).toUpperCase()\n    } else if (byte > 62) {\n      id += '-'\n    } else {\n      id += '_'\n    }\n    return id\n  }, '')\n"],"names":["buttonCaption","onSubmit","children","className","css","type","onChange","name","label","title","pattern","required","minLength","value","inputId","useRef","nanoid","htmlFor","current","id","dispatch","useDispatch","Form","e","preventDefault","form","currentTarget","logIn","email","elements","password","reset","Input","size","crypto","getRandomValues","Uint8Array","reduce","byte","toString","toUpperCase"],"sourceRoot":""}