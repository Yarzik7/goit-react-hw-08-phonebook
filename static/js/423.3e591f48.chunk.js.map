{"version":3,"file":"static/js/423.3e591f48.chunk.js","mappings":"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","sources":["webpack://phonebook-frontend/./src/components/Container/Container.module.css?9f71","components/Container/Container.jsx","webpack://phonebook-frontend/./src/components/Form/Form.module.css?89ba","components/Form/Form.jsx","webpack://phonebook-frontend/./src/components/Input/Input.module.css?1f33","components/Input/Input.jsx","webpack://phonebook-frontend/./src/components/Section/Section.module.css?dbe8","components/Section/Section.jsx","webpack://phonebook-frontend/./src/components/ContactItem/ContactItem.module.css?be2b","Redux/contacts/selectors.js","components/ContactForm/ContactForm.jsx","components/ContactItem/ContactItem.jsx","webpack://phonebook-frontend/./src/components/ContactList/ContactList.module.css?1ce0","Redux/filter/selectors.js","components/ContactList/ContactList.jsx","webpack://phonebook-frontend/./src/ControlPanel/ControlPanel.module.css?e409","webpack://phonebook-frontend/./src/components/AddButton/AddButton.module.css?e67f","components/AddButton/AddButton.jsx","ControlPanel/ControlPanel.jsx","webpack://phonebook-frontend/./src/components/Filter/Filter.module.css?fad1","components/Filter/Filter.jsx","webpack://phonebook-frontend/./src/components/App/App.module.css?583a","pages/ContactsPage.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"container\":\"Container_container__VVOCq\"};","import PropTypes from 'prop-types';\nimport css from './Container.module.css';\n\nconst Container = ({ children }) => {\n  return <div className={css.container}>{children}</div>;\n};\n\nContainer.propTypes = {\n  children: PropTypes.node.isRequired,\n};\n\nexport default Container;\n","// extracted by mini-css-extract-plugin\nexport default {\"form\":\"Form_form__e1yzW\",\"button\":\"Form_button__8NOIT\"};","import css from './Form.module.css';\n\nconst Form = ({ buttonCaption, onSubmit, children }) => {\n  return (\n    <form className={css.form} onSubmit={onSubmit}>\n      {children}\n      <button className={css.button} type=\"submit\">\n        {buttonCaption}\n      </button>\n    </form>\n  );\n};\n\nexport default Form;\n","// extracted by mini-css-extract-plugin\nexport default {\"label\":\"Input_label__NXpCD\",\"input\":\"Input_input__E5rzA\"};","import { useRef } from 'react';\nimport { nanoid } from 'nanoid';\nimport css from './Input.module.css';\n\nconst Input = ({\n  onChange,\n  type = 'text',\n  name = '',\n  label,\n  title,\n  pattern,\n  required = true,\n  minLength,\n  value,\n}) => {\n  const inputId = useRef(nanoid());\n  return (\n    <>\n      {label && (\n        <label htmlFor={inputId.current} className={css.label}>\n          {label}\n        </label>\n      )}\n      <input\n        id={inputId.current}\n        className={css.input}\n        type={type}\n        name={name}\n        value={value}\n        pattern={pattern}\n        title={title}\n        required={required}\n        onChange={onChange}\n        minLength={minLength}\n      />\n    </>\n  );\n};\n\nexport default Input;\n","// extracted by mini-css-extract-plugin\nexport default {\"section\":\"Section_section__Z2PLw\"};","import css from './Section.module.css';\n\nconst Section = ({ children }) => {\n  return <section className={css.section}>{children}</section>;\n};\n\nexport default Section;\n","// extracted by mini-css-extract-plugin\nexport default {\"contactItem\":\"ContactItem_contactItem__Z4FuP\",\"caption\":\"ContactItem_caption__9hsJU\",\"buttonContainer\":\"ContactItem_buttonContainer__HxbMT\",\"button\":\"ContactItem_button__IRFBz\"};","const selectContacts = state => state.contacts;\n\nexport {selectContacts}\n","import { useState } from 'react';\nimport { nanoid } from 'nanoid';\nimport { addContact, updateContact } from 'Redux/contacts/operations';\nimport { selectContacts } from 'Redux/contacts/selectors';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { showNotify } from 'js/notifyFunc';\nimport Input from 'components/Input/Input';\nimport Form from 'components/Form/Form';\n\nconst ContactForm = ({ currentContact, onCloseModal }) => {\n  const [name, setName] = useState(currentContact?.name ?? '');\n  const [number, setNumber] = useState(currentContact?.number ?? '');\n\n  const { items } = useSelector(selectContacts);\n  const dispatch = useDispatch();\n\n  const handleCreateContactData = () => {\n    const contactData = {};\n    const contactDataPairs = Object.entries({ name, number });\n\n    for (const pair of contactDataPairs) {\n      if (currentContact?.[pair[0]] !== pair[1]) {\n        contactData[pair[0]] = pair[1];\n      }\n    }\n\n    return contactData;\n  };\n\n  const handleSubmit = async event => {\n    event.preventDefault();\n\n    if (\n      items.some(\n        ({ name: contactName }) =>\n          contactName.toLowerCase() === name.toLowerCase() &&\n          contactName.toLowerCase() !== currentContact?.name.toLowerCase()\n      )\n    ) {\n      showNotify(`${name} is already in contact`, 'warning');\n      return;\n    }\n\n    const contactData = handleCreateContactData();\n\n    if (!Object.keys(contactData).length) {\n      showNotify('Update at least one field!', 'failure');\n      return;\n    }\n\n    const operationResult = await dispatch(\n      currentContact\n        ? updateContact({ contactId: currentContact.contactId, updData: contactData })\n        : addContact({ id: nanoid(), ...contactData })\n    );\n\n    if (operationResult.error) {\n      showNotify(operationResult.payload.message, 'failure', 5000);\n      return;\n    }\n\n    reset();\n    onCloseModal();\n  };\n\n  const handleChange = ({ target: { name, value } }) => {\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n      case 'number':\n        setNumber(value);\n        break;\n      default:\n        return;\n    }\n  };\n\n  const reset = () => {\n    setName('');\n    setNumber('');\n  };\n\n  return (\n    <Form buttonCaption={`${currentContact ? 'Update' : 'Add'} contact`} onSubmit={handleSubmit}>\n      <Input\n        label=\"Name\"\n        type=\"text\"\n        name=\"name\"\n        pattern=\"^[A-Za-z\\u0080-\\uFFFF\\- ']+$\"\n        title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n        onChange={handleChange}\n        value={name}\n      />\n\n      <Input\n        label=\"Number\"\n        type=\"tel\"\n        name=\"number\"\n        pattern=\"^(\\+?[0-9.\\(\\)\\-\\s]*)$\"\n        title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n        onChange={handleChange}\n        value={number}\n      />\n    </Form>\n  );\n};\n\nexport default ContactForm;\n","import PropTypes from 'prop-types';\nimport { FaTrash, FaPen } from 'react-icons/fa';\nimport css from './ContactItem.module.css';\nimport { useDispatch } from 'react-redux';\nimport { useShowModal } from 'hooks';\nimport { deleteContact } from 'Redux/contacts/operations';\nimport Modal from 'components/Modal/Modal';\nimport ContactForm from 'components/ContactForm';\n\nconst ContactItem = ({ name, number, contactId }) => {\n  const { showModal, toggleModal, backdropRef, contentRef } = useShowModal();\n\n  const dispatch = useDispatch();\n  const handleDeleteContact = () => dispatch(deleteContact(contactId));\n\n  return (\n    <li className={css.contactItem}>\n      <div>\n        <p className={css.caption}>Name: {name}</p>\n        <p className={css.caption}>Number: {number}</p>\n      </div>\n\n      <div className={css.buttonContainer}>\n        <button type=\"button\" className={css.button} onClick={toggleModal}>\n          <FaPen />\n        </button>\n        <button type=\"button\" className={css.button} onClick={handleDeleteContact}>\n          <FaTrash />\n        </button>\n      </div>\n      {showModal && (\n        <Modal onClose={toggleModal} backdropRef={backdropRef} contentRef={contentRef}>\n          <ContactForm onCloseModal={toggleModal} currentContact={{ name, number, contactId }} />\n        </Modal>\n      )}\n    </li>\n  );\n};\n\nContactItem.propTypes = {\n  name: PropTypes.string.isRequired,\n  number: PropTypes.string.isRequired,\n  contactId: PropTypes.string.isRequired,\n};\n\nexport default ContactItem;\n","// extracted by mini-css-extract-plugin\nexport default {\"contactList\":\"ContactList_contactList__UFVCg\"};","const selectFilter = state => state.filter;\n\nexport {selectFilter}","import ContactItem from '../ContactItem';\nimport css from './ContactList.module.css';\nimport { useSelector } from 'react-redux';\nimport { selectContacts } from 'Redux/contacts/selectors';\nimport { selectFilter } from 'Redux/filter/selectors';\n\nconst ContactList = () => {\n  const { items } = useSelector(selectContacts);\n  const filter = useSelector(selectFilter);\n\n  return (\n    <ul className={css.contactList}>\n      {items\n        .filter(({ name }) => name.toLowerCase().includes(filter.toLowerCase()))\n        .map(({ id, name, number }) => (\n          <ContactItem key={id} name={name} number={number} contactId={id} />\n        ))}\n    </ul>\n  );\n};\n\nexport default ContactList;\n","// extracted by mini-css-extract-plugin\nexport default {\"controlPanelBox\":\"ControlPanel_controlPanelBox__HVdks\"};","// extracted by mini-css-extract-plugin\nexport default {\"addButton\":\"AddButton_addButton__err1-\"};","import css from './AddButton.module.css';\nimport { MdAddIcCall } from 'react-icons/md';\nimport { useShowModal } from 'hooks';\nimport Modal from 'components/Modal/Modal';\nimport ContactForm from 'components/ContactForm';\n\nconst AddButton = () => {\n  const { showModal, toggleModal, backdropRef, contentRef } = useShowModal();\n\n  return (\n    <>\n      <button className={css.addButton} onClick={toggleModal}>\n        <MdAddIcCall size={40} />\n      </button>\n\n      {showModal && (\n        <Modal onClose={toggleModal} backdropRef={backdropRef} contentRef={contentRef}>\n          <ContactForm onCloseModal={toggleModal} />\n        </Modal>\n      )}\n    </>\n  );\n};\n\nexport default AddButton;\n","import css from './ControlPanel.module.css';\nimport AddButton from 'components/AddButton/AddButton';\n\nconst ControlPanel = () => {\n  return (\n    <div className={css.controlPanelBox}>\n      <AddButton />\n    </div>\n  );\n};\n\nexport default ControlPanel;\n","// extracted by mini-css-extract-plugin\nexport default {\"filterBox\":\"Filter_filterBox__A-UPt\"};","import css from './Filter.module.css';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { changeFilter } from 'Redux/filter/filterSlice';\nimport { selectFilter } from 'Redux/filter/selectors';\nimport Input from 'components/Input/Input';\n\nconst Filter = () => {\n  const filter = useSelector(selectFilter);\n  const dispatch = useDispatch();\n\n  const handleChangeFilter = ({ target: { value } }) => dispatch(changeFilter(value));\n\n  return (\n    <div className={css.filterBox}>\n      <Input\n        label=\"Find contacts by name\"\n        type=\"text\"\n        name=\"filter\"\n        pattern=\"^[A-Za-z\\u0080-\\uFFFF\\- ']+$\"\n        title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n        onChange={handleChangeFilter}\n        value={filter}\n      />\n    </div>\n  );\n};\n\nexport default Filter;\n","// extracted by mini-css-extract-plugin\nexport default {\"app\":\"App_app__6Ra7L\",\"appTitle\":\"App_appTitle__R-ohI\",\"info\":\"App_info__qU+g4\"};","import { useEffect } from 'react';\nimport ContactList from 'components/ContactList/ContactList';\nimport ControlPanel from 'ControlPanel/ControlPanel';\nimport Filter from 'components/Filter/Filter';\nimport Section from 'components/Section/Section';\nimport Container from 'components/Container';\nimport css from 'components/App/App.module.css';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { selectContacts } from 'Redux/contacts/selectors';\nimport { fetchContacts } from 'Redux/contacts/operations';\n\nconst ContactsPage = () => {\n  const dispatch = useDispatch();\n  const { items, isLoading, error } = useSelector(selectContacts);\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <>\n      <h1 className=\"visually-hidden\">Contacts</h1>\n\n      <Section>\n        <Container>\n          <h2 className=\"visually-hidden\">Control panel</h2>\n          <ControlPanel />\n        </Container>\n      </Section>\n\n      <Section>\n        <Container>\n          <h2 className=\"visually-hidden\">Filter</h2>\n          <Filter />\n        </Container>\n      </Section>\n\n      <Section>\n        <Container>\n          <h2 className=\"visually-hidden\">Contact list</h2>\n          {!error && !isLoading && !items.length ? (\n            <p className={css.info}>The contact list is empty!</p>\n          ) : (\n            <ContactList />\n          )}\n        </Container>\n      </Section>\n    </>\n  );\n};\n\nexport default ContactsPage;\n"],"names":["children","className","css","buttonCaption","onSubmit","type","onChange","name","label","title","pattern","required","minLength","value","inputId","useRef","nanoid","htmlFor","current","id","selectContacts","state","contacts","currentContact","onCloseModal","useState","setName","number","setNumber","items","useSelector","dispatch","useDispatch","handleCreateContactData","contactData","Object","entries","pair","handleSubmit","event","preventDefault","some","contactName","toLowerCase","showNotify","keys","length","updateContact","contactId","updData","addContact","operationResult","error","payload","message","reset","handleChange","target","Form","Input","useShowModal","showModal","toggleModal","backdropRef","contentRef","onClick","deleteContact","Modal","onClose","selectFilter","filter","includes","map","size","changeFilter","isLoading","useEffect","fetchContacts","Section","Container"],"sourceRoot":""}