{"version":3,"file":"static/js/299.58065a00.chunk.js","mappings":"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","sources":["webpack://phonebook-frontend/./src/components/Container/Container.module.css?9f71","components/Container/Container.jsx","webpack://phonebook-frontend/./src/components/Form/Form.module.css?89ba","components/Form/Form.jsx","webpack://phonebook-frontend/./src/components/Input/Input.module.css?1f33","components/Input/Input.jsx","webpack://phonebook-frontend/./src/components/Section/Section.module.css?dbe8","components/Section/Section.jsx","webpack://phonebook-frontend/./src/components/ContactItem/ContactItem.module.css?be2b","webpack://phonebook-frontend/./src/components/Modal/ModalContent/ModalContent.module.css?f720","webpack://phonebook-frontend/./src/components/CloseButton/CloseButton.module.css?07b6","components/CloseButton/CloseButton.jsx","components/Modal/ModalContent/ModalContent.jsx","Redux/contacts/selectors.js","components/ContactForm/ContactForm.jsx","components/ContactItem/ContactItem.jsx","webpack://phonebook-frontend/./src/components/ContactList/ContactList.module.css?1ce0","Redux/filter/selectors.js","components/ContactList/ContactList.jsx","webpack://phonebook-frontend/./src/ControlPanel/ControlPanel.module.css?e409","webpack://phonebook-frontend/./src/components/AddButton/AddButton.module.css?e67f","components/AddButton/AddButton.jsx","ControlPanel/ControlPanel.jsx","webpack://phonebook-frontend/./src/components/Filter/Filter.module.css?fad1","components/Filter/Filter.jsx","webpack://phonebook-frontend/./src/components/App/App.module.css?583a","pages/ContactsPage.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"container\":\"Container_container__VVOCq\"};","import PropTypes from 'prop-types';\nimport css from './Container.module.css';\n\nconst Container = ({ children }) => {\n  return <div className={css.container}>{children}</div>;\n};\n\nContainer.propTypes = {\n  children: PropTypes.node.isRequired,\n};\n\nexport default Container;\n","// extracted by mini-css-extract-plugin\nexport default {\"form\":\"Form_form__e1yzW\",\"button\":\"Form_button__8NOIT\"};","import css from './Form.module.css';\n\nconst Form = ({ buttonCaption, onSubmit, children }) => {\n  return (\n    <form className={css.form} onSubmit={onSubmit}>\n      {children}\n      <button className={css.button} type=\"submit\">\n        {buttonCaption}\n      </button>\n    </form>\n  );\n};\n\nexport default Form;\n","// extracted by mini-css-extract-plugin\nexport default {\"label\":\"Input_label__NXpCD\",\"input\":\"Input_input__E5rzA\"};","import { useRef } from 'react';\nimport { nanoid } from 'nanoid';\nimport css from './Input.module.css';\n\nconst Input = ({\n  onChange,\n  type = 'text',\n  name = '',\n  label,\n  title,\n  pattern,\n  required = true,\n  minLength,\n  value,\n}) => {\n  const inputId = useRef(nanoid());\n  return (\n    <>\n      {label && (\n        <label htmlFor={inputId.current} className={css.label}>\n          {label}\n        </label>\n      )}\n      <input\n        id={inputId.current}\n        className={css.input}\n        type={type}\n        name={name}\n        value={value}\n        pattern={pattern}\n        title={title}\n        required={required}\n        onChange={onChange}\n        minLength={minLength}\n      />\n    </>\n  );\n};\n\nexport default Input;\n","// extracted by mini-css-extract-plugin\nexport default {\"section\":\"Section_section__Z2PLw\"};","import css from './Section.module.css';\n\nconst Section = ({ children }) => {\n  return <section className={css.section}>{children}</section>;\n};\n\nexport default Section;\n","// extracted by mini-css-extract-plugin\nexport default {\"contactItem\":\"ContactItem_contactItem__Z4FuP\",\"caption\":\"ContactItem_caption__9hsJU\",\"buttonContainer\":\"ContactItem_buttonContainer__HxbMT\",\"button\":\"ContactItem_button__IRFBz\"};","// extracted by mini-css-extract-plugin\nexport default {\"modalContent\":\"ModalContent_modalContent__oPvfG\"};","// extracted by mini-css-extract-plugin\nexport default {\"closeButton\":\"CloseButton_closeButton__n+3F+\"};","import css from './CloseButton.module.css';\nimport { RxCross2 } from 'react-icons/rx';\n\nconst CloseButton = ({ onClick }) => {\n  return (\n    <button className={css.closeButton} onClick={onClick}>\n      <RxCross2 size={24} />\n    </button>\n  );\n};\n\nexport default CloseButton;\n","import { useRef } from 'react';\nimport css from './ModalContent.module.css';\nimport CloseButton from 'components/CloseButton/CloseButton';\n\nconst ModalContent = ({ onClose, children }) => {\n  const modalContentRef = useRef(null);\n\n  return (\n    <div ref={modalContentRef} className={css.modalContent}>\n      <CloseButton onClick={onClose} />\n      {children}\n    </div>\n  );\n};\n\nexport default ModalContent;\n","const selectContacts = state => state.contacts;\n\nexport {selectContacts}\n","import { useState } from 'react';\nimport { nanoid } from 'nanoid';\nimport { addContact, updateContact } from 'Redux/contacts/operations';\nimport { selectContacts } from 'Redux/contacts/selectors';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { showNotify } from 'js/notifyFunc';\nimport Input from 'components/Input/Input';\nimport Form from 'components/Form/Form';\n\nconst ContactForm = ({ currentContact, onCloseModal }) => {\n  const [name, setName] = useState(currentContact?.name ?? '');\n  const [number, setNumber] = useState(currentContact?.number ?? '');\n\n  const { items } = useSelector(selectContacts);\n  const dispatch = useDispatch();\n\n  const handleCreateContactData = () => {\n    const contactData = {};\n    const contactDataPairs = Object.entries({ name, number });\n\n    for (const pair of contactDataPairs) {\n      if (currentContact?.[pair[0]] !== pair[1]) {\n        contactData[pair[0]] = pair[1];\n      }\n    }\n\n    return contactData;\n  };\n\n  const handleSubmit = async event => {\n    event.preventDefault();\n\n    if (\n      items.some(\n        ({ name: contactName }) =>\n          contactName.toLowerCase() === name.toLowerCase() &&\n          contactName.toLowerCase() !== currentContact?.name.toLowerCase()\n      )\n    ) {\n      showNotify(`${name} is already in contact`, 'warning');\n      return;\n    }\n\n    const contactData = handleCreateContactData();\n\n    if (!Object.keys(contactData).length) {\n      showNotify('Update at least one field!', 'failure');\n      return;\n    }\n\n    const operationResult = await dispatch(\n      currentContact\n        ? updateContact({ contactId: currentContact.contactId, updData: contactData })\n        : addContact({ id: nanoid(), ...contactData })\n    );\n\n    if (operationResult.error) {\n      showNotify(operationResult.payload.message, 'failure', 5000);\n      return;\n    }\n\n    reset();\n    onCloseModal();\n  };\n\n  const handleChange = ({ target: { name, value } }) => {\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n      case 'number':\n        setNumber(value);\n        break;\n      default:\n        return;\n    }\n  };\n\n  const reset = () => {\n    setName('');\n    setNumber('');\n  };\n\n  return (\n    <Form buttonCaption={`${currentContact ? 'Update' : 'Add'} contact`} onSubmit={handleSubmit}>\n      <Input\n        label=\"Name\"\n        type=\"text\"\n        name=\"name\"\n        pattern=\"^[A-Za-z\\u0080-\\uFFFF\\- ']+$\"\n        title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n        onChange={handleChange}\n        value={name}\n      />\n\n      <Input\n        label=\"Number\"\n        type=\"tel\"\n        name=\"number\"\n        pattern=\"^(\\+?[0-9.\\(\\)\\-\\s]*)$\"\n        title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n        onChange={handleChange}\n        value={number}\n      />\n    </Form>\n  );\n};\n\nexport default ContactForm;\n","import PropTypes from 'prop-types';\nimport { FaTrash, FaPen } from 'react-icons/fa';\nimport css from './ContactItem.module.css';\nimport { useDispatch } from 'react-redux';\nimport { deleteContact } from 'Redux/contacts/operations';\nimport Modal from 'components/Modal/Modal';\nimport ModalContent from 'components/Modal/ModalContent/ModalContent';\nimport ContactForm from 'components/ContactForm';\nimport { useState } from 'react';\n\nconst ContactItem = ({ name, number, contactId }) => {\n  const [showModal, setShowModal] = useState(false);\n  const dispatch = useDispatch();\n\n  const toggleModal = () => setShowModal(showModal => !showModal);\n  const handleDeleteContact = () => dispatch(deleteContact(contactId));\n\n  return (\n    <li className={css.contactItem}>\n      <div>\n        <p className={css.caption}>Name: {name}</p>\n        <p className={css.caption}>Number: {number}</p>\n      </div>\n\n      <div className={css.buttonContainer}>\n        <button type=\"button\" className={css.button} onClick={toggleModal}>\n          <FaPen />\n        </button>\n        <button type=\"button\" className={css.button} onClick={handleDeleteContact}>\n          <FaTrash />\n        </button>\n      </div>\n      {showModal && (\n        <Modal onClose={toggleModal}>\n          <ModalContent onClose={toggleModal}>\n            <ContactForm onCloseModal={toggleModal} currentContact={{ name, number, contactId }} />\n          </ModalContent>\n        </Modal>\n      )}\n    </li>\n  );\n};\n\nContactItem.propTypes = {\n  name: PropTypes.string.isRequired,\n  number: PropTypes.string.isRequired,\n  contactId: PropTypes.string.isRequired,\n};\n\nexport default ContactItem;\n","// extracted by mini-css-extract-plugin\nexport default {\"contactList\":\"ContactList_contactList__UFVCg\"};","const selectFilter = state => state.filter;\n\nexport {selectFilter}","import ContactItem from '../ContactItem';\nimport css from './ContactList.module.css';\nimport { useSelector } from 'react-redux';\nimport { selectContacts } from 'Redux/contacts/selectors';\nimport { selectFilter } from 'Redux/filter/selectors';\n\nconst ContactList = () => {\n  const { items } = useSelector(selectContacts);\n  const filter = useSelector(selectFilter);\n\n  return (\n    <ul className={css.contactList}>\n      {items\n        .filter(({ name }) => name.toLowerCase().includes(filter.toLowerCase()))\n        .map(({ id, name, number }) => (\n          <ContactItem key={id} name={name} number={number} contactId={id} />\n        ))}\n    </ul>\n  );\n};\n\nexport default ContactList;\n","// extracted by mini-css-extract-plugin\nexport default {\"controlPanelBox\":\"ControlPanel_controlPanelBox__HVdks\"};","// extracted by mini-css-extract-plugin\nexport default {\"addButton\":\"AddButton_addButton__err1-\"};","import css from './AddButton.module.css';\nimport { MdAddIcCall } from 'react-icons/md';\nimport { useState } from 'react';\nimport Modal from 'components/Modal/Modal';\nimport ModalContent from 'components/Modal/ModalContent/ModalContent';\nimport ContactForm from 'components/ContactForm';\n\nconst AddButton = () => {\n  const [showModal, setShowModal] = useState(false);\n  const toggleModal = () => setShowModal(showModal => !showModal);\n\n  return (\n    <>\n      <button className={css.addButton} onClick={toggleModal}>\n        <MdAddIcCall size={40} />\n      </button>\n\n      {showModal && (\n        <Modal onClose={toggleModal}>\n          <ModalContent onClose={toggleModal}>\n            <ContactForm onCloseModal={toggleModal} />\n          </ModalContent>\n        </Modal>\n      )}\n    </>\n  );\n};\n\nexport default AddButton;\n","import css from './ControlPanel.module.css';\nimport AddButton from 'components/AddButton/AddButton';\n\nconst ControlPanel = () => {\n  return (\n    <div className={css.controlPanelBox}>\n      <AddButton />\n    </div>\n  );\n};\n\nexport default ControlPanel;\n","// extracted by mini-css-extract-plugin\nexport default {\"filterBox\":\"Filter_filterBox__A-UPt\"};","import css from './Filter.module.css';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { changeFilter } from 'Redux/filter/filterSlice';\nimport { selectFilter } from 'Redux/filter/selectors';\nimport Input from 'components/Input/Input';\n\nconst Filter = () => {\n  const filter = useSelector(selectFilter);\n  const dispatch = useDispatch();\n\n  const handleChangeFilter = ({ target: { value } }) => dispatch(changeFilter(value));\n\n  return (\n    <div className={css.filterBox}>\n      <Input\n        label=\"Find contacts by name\"\n        type=\"text\"\n        name=\"filter\"\n        pattern=\"^[A-Za-z\\u0080-\\uFFFF\\- ']+$\"\n        title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n        onChange={handleChangeFilter}\n        value={filter}\n      />\n    </div>\n  );\n};\n\nexport default Filter;\n","// extracted by mini-css-extract-plugin\nexport default {\"app\":\"App_app__6Ra7L\",\"appTitle\":\"App_appTitle__R-ohI\",\"info\":\"App_info__qU+g4\"};","import { useEffect } from 'react';\nimport ContactList from 'components/ContactList/ContactList';\nimport ControlPanel from 'ControlPanel/ControlPanel';\nimport Filter from 'components/Filter/Filter';\nimport Section from 'components/Section/Section';\nimport Container from 'components/Container';\nimport css from 'components/App/App.module.css';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { selectContacts } from 'Redux/contacts/selectors';\nimport { fetchContacts } from 'Redux/contacts/operations';\n\nconst ContactsPage = () => {\n  const dispatch = useDispatch();\n  const { items, isLoading, error } = useSelector(selectContacts);\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <>\n      <h1 className=\"visually-hidden\">Contacts</h1>\n\n      <Section>\n        <Container>\n          <h2 className=\"visually-hidden\">Control panel</h2>\n          <ControlPanel />\n        </Container>\n      </Section>\n\n      <Section>\n        <Container>\n          <h2 className=\"visually-hidden\">Filter</h2>\n          <Filter />\n        </Container>\n      </Section>\n\n      <Section>\n        <Container>\n          <h2 className=\"visually-hidden\">Contact list</h2>\n          {!error && !isLoading && !items.length ? (\n            <p className={css.info}>The contact list is empty!</p>\n          ) : (\n            <ContactList />\n          )}\n        </Container>\n      </Section>\n    </>\n  );\n};\n\nexport default ContactsPage;\n"],"names":["children","className","css","buttonCaption","onSubmit","type","onChange","name","label","title","pattern","required","minLength","value","inputId","useRef","nanoid","htmlFor","current","id","onClick","size","onClose","modalContentRef","ref","selectContacts","state","contacts","currentContact","onCloseModal","useState","setName","number","setNumber","items","useSelector","dispatch","useDispatch","handleCreateContactData","contactData","Object","entries","pair","handleSubmit","event","preventDefault","some","contactName","toLowerCase","showNotify","keys","length","updateContact","contactId","updData","addContact","operationResult","error","payload","message","reset","handleChange","target","Form","Input","showModal","setShowModal","toggleModal","deleteContact","Modal","selectFilter","filter","includes","map","changeFilter","isLoading","useEffect","fetchContacts","Section","Container"],"sourceRoot":""}