{"version":3,"file":"static/js/280.4da6de57.chunk.js","mappings":"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","sources":["Redux/contacts/selectors.js","Redux/filter/selectors.js","webpack://phonebook-frontend/./src/components/Form/Form.module.css?89ba","components/Form/Form.jsx","webpack://phonebook-frontend/./src/components/Input/Input.module.css?1f33","components/Input/Input.jsx","webpack://phonebook-frontend/./src/components/Head/Head.module.css?7273","components/Head/Head.jsx","webpack://phonebook-frontend/./src/components/Section/Section.module.css?dbe8","components/Section/Section.jsx","webpack://phonebook-frontend/./src/components/Container/Container.module.css?9f71","components/Container/Container.jsx","components/SectionWithContainer/SectionWithContainer.jsx","webpack://phonebook-frontend/./src/components/ContactItem/ContactItem.module.css?be2b","components/ContactForm/ContactForm.jsx","webpack://phonebook-frontend/./src/components/Confirm/Confirm.module.css?0438","components/Confirm/Confirm.jsx","components/ContactItem/ContactItem.jsx","webpack://phonebook-frontend/./src/components/Message/Message.module.css?e83e","components/Message/Message.jsx","webpack://phonebook-frontend/./src/components/ContactList/ContactList.module.css?1ce0","components/ContactList/ContactList.jsx","webpack://phonebook-frontend/./src/ControlPanel/ControlPanel.module.css?e409","webpack://phonebook-frontend/./src/components/AddButton/AddButton.module.css?e67f","components/AddButton/AddButton.jsx","ControlPanel/ControlPanel.jsx","webpack://phonebook-frontend/./src/components/Filter/Filter.module.css?fad1","components/Filter/Filter.jsx","pages/ContactsPage.jsx"],"sourcesContent":["import { createSelector } from '@reduxjs/toolkit';\nimport { selectFilter } from 'Redux/filter/selectors';\n\nconst selectContacts = state => state.contacts.items;\nconst selectIsDeleting = state => state.contacts.isDeleting;\nconst selectIsLoading = state => state.contacts.isLoading;\nconst selectIsFetching = state => state.contacts.isFetching;\nconst selectError = state => state.contacts.error;\nconst selectCurrentContactId = state => state.contacts.currentContactId;\n\nconst selectVisibleContacts = createSelector([selectFilter, selectContacts], (filter, items) => {\n  return {\n    items: items.filter(({ name }) => name.toLowerCase().includes(filter.toLowerCase())),\n    allLength: items.length,\n  };\n});\n\nexport {\n  selectContacts,\n  selectIsDeleting,\n  selectIsLoading,\n  selectIsFetching,\n  selectError,\n  selectCurrentContactId,\n  selectVisibleContacts,\n};\n","const selectFilter = state => state.filter;\n\nexport {selectFilter}","// extracted by mini-css-extract-plugin\nexport default {\"form\":\"Form_form__e1yzW\",\"button\":\"Form_button__8NOIT\"};","import { useState } from 'react';\nimport css from './Form.module.css';\nimport { useSelector } from 'react-redux';\nimport { selectIsLoading } from 'Redux/contacts/selectors';\nimport { Loader } from 'components/Loader/Loader';\n\nconst Form = ({ buttonCaption, onSubmit, children }) => {\n  const [isDisabledButton, setIsDisabledButton] = useState(false);\n\n  const isLoading = useSelector(selectIsLoading);\n\n  const handleFormSubmit = async e => {\n    e.preventDefault();\n    setIsDisabledButton(true);\n    await onSubmit();\n    setIsDisabledButton(false);\n  };\n\n  return (\n    <form className={css.form} onSubmit={handleFormSubmit}>\n      {children}\n      <button disabled={isDisabledButton} className={css.button} type=\"submit\">\n        {buttonCaption}\n        {isLoading && (\n          <Loader\n            size=\"30px\"\n            strokeSize={4}\n            color=\"var(--primary-dark-color)\"\n            secondaryColor='\"var(--primary-dark-color)\"'\n          />\n        )}\n      </button>\n    </form>\n  );\n};\n\nexport default Form;\n","// extracted by mini-css-extract-plugin\nexport default {\"label\":\"Input_label__NXpCD\",\"input\":\"Input_input__E5rzA\"};","import { useRef } from 'react';\nimport { nanoid } from 'nanoid';\nimport css from './Input.module.css';\n\nconst Input = ({\n  onChange,\n  type = 'text',\n  name = '',\n  label,\n  title,\n  pattern,\n  required = true,\n  minLength,\n  value,\n}) => {\n  const inputId = useRef(nanoid());\n  return (\n    <>\n      {label && (\n        <label htmlFor={inputId.current} className={css.label}>\n          {label}\n        </label>\n      )}\n      <input\n        id={inputId.current}\n        className={css.input}\n        type={type}\n        name={name}\n        value={value}\n        pattern={pattern}\n        title={title}\n        required={required}\n        onChange={onChange}\n        minLength={minLength}\n      />\n    </>\n  );\n};\n\nexport default Input;\n","// extracted by mini-css-extract-plugin\nexport default {\"head\":\"Head_head__UoJYS\"};","import css from './Head.module.css';\n\nconst Head = ({ headText, headType: HeadType = 'h1', cssClass }) => {\n  return <HeadType className={cssClass ?? css.head}>{headText}</HeadType>;\n};\n\nexport default Head;\n","// extracted by mini-css-extract-plugin\nexport default {\"section\":\"Section_section__Z2PLw\"};","import Head from 'components/Head/Head';\nimport css from './Section.module.css';\n\nconst Section = ({ isHeadHas = true, headText, headType = 'h2', cssHeadClass, children }) => {\n  return (\n    <section className={css.section}>\n      {isHeadHas && <Head headText={headText} headType={headType} cssClass={cssHeadClass} />}\n      {children}\n    </section>\n  );\n};\n\nexport default Section;\n","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"Container_container__VVOCq\"};","import PropTypes from 'prop-types';\nimport css from './Container.module.css';\n\nconst Container = ({ children }) => {\n  return <div className={css.container}>{children}</div>;\n};\n\nContainer.propTypes = {\n  children: PropTypes.node.isRequired,\n};\n\nexport default Container;\n","import Section from 'components/Section/Section';\nimport Container from 'components/Container';\nimport Head from 'components/Head/Head';\n\nconst SectionWithContainer = ({\n  isHeadHas = true,\n  headText,\n  headType = 'h2',\n  cssHeadClass,\n  children,\n}) => {\n  return (\n    <Section isHeadHas={false}>\n      <Container>\n        {isHeadHas && <Head headText={headText} headType={headType} cssClass={cssHeadClass} />}\n        {children}\n      </Container>\n    </Section>\n  );\n};\n\nexport default SectionWithContainer;\n","// extracted by mini-css-extract-plugin\nexport default {\"contactItem\":\"ContactItem_contactItem__Z4FuP\",\"caption\":\"ContactItem_caption__9hsJU\",\"buttonContainer\":\"ContactItem_buttonContainer__HxbMT\",\"button\":\"ContactItem_button__IRFBz\"};","import { useState } from 'react';\nimport { nanoid } from 'nanoid';\nimport { addContact, updateContact } from 'Redux/contacts/operations';\nimport { selectContacts } from 'Redux/contacts/selectors';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { showNotify } from 'js/notifyFunc';\nimport Input from 'components/Input/Input';\nimport Form from 'components/Form/Form';\n\nconst ContactForm = ({ currentContact, onCloseModal }) => {\n  const [name, setName] = useState(currentContact?.name ?? '');\n  const [number, setNumber] = useState(currentContact?.number ?? '');\n\n  const items = useSelector(selectContacts);\n  const dispatch = useDispatch();\n\n  const handleCreateContactData = () => {\n    const contactData = {};\n    const contactDataPairs = Object.entries({ name, number });\n\n    for (const pair of contactDataPairs) {\n      if (currentContact?.[pair[0]] !== pair[1]) {\n        contactData[pair[0]] = pair[1];\n      }\n    }\n\n    return contactData;\n  };\n\n  const handleSubmit = async () => {\n    if (\n      items.some(\n        ({ name: contactName }) =>\n          contactName.toLowerCase() === name.toLowerCase() &&\n          contactName.toLowerCase() !== currentContact?.name.toLowerCase()\n      )\n    ) {\n      showNotify(`${name} is already in contact`, 'warning');\n      return;\n    }\n\n    const contactData = handleCreateContactData();\n\n    if (!Object.keys(contactData).length) {\n      showNotify('Update at least one field!', 'failure');\n      return;\n    }\n\n    const operationResult = await dispatch(\n      currentContact\n        ? updateContact({ contactId: currentContact.contactId, updData: contactData })\n        : addContact({ id: nanoid(), ...contactData })\n    );\n\n    if (operationResult.error) {\n      showNotify(operationResult.payload.message, 'failure');\n      return;\n    }\n\n    reset();\n    onCloseModal();\n  };\n\n  const handleChange = ({ target: { name, value } }) => {\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n      case 'number':\n        setNumber(value);\n        break;\n      default:\n        return;\n    }\n  };\n\n  const reset = () => {\n    setName('');\n    setNumber('');\n  };\n\n  return (\n    <Form buttonCaption={`${currentContact ? 'Update' : 'Add'} contact`} onSubmit={handleSubmit}>\n      <Input\n        label=\"Name\"\n        type=\"text\"\n        name=\"name\"\n        pattern=\"^[A-Za-z\\u0080-\\uFFFF\\- ']+$\"\n        title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n        onChange={handleChange}\n        value={name}\n      />\n\n      <Input\n        label=\"Number\"\n        type=\"tel\"\n        name=\"number\"\n        pattern=\"^(\\+?[0-9.\\(\\)\\-\\s]*)$\"\n        title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n        onChange={handleChange}\n        value={number}\n      />\n    </Form>\n  );\n};\n\nexport default ContactForm;\n","// extracted by mini-css-extract-plugin\nexport default {\"confirm\":\"Confirm_confirm__8ag-K\",\"confirm__head\":\"Confirm_confirm__head__6AWcP\",\"confirm__text\":\"Confirm_confirm__text__qdNcH\",\"confirm__buttonBox\":\"Confirm_confirm__buttonBox__8VL3r\",\"confirm__button\":\"Confirm_confirm__button__px4ma\"};","import css from './Confirm.module.css';\n\nconst Confirm = ({ contactName, onConfirmed, onNotConfirmed }) => {\n  return (\n    <div className={css.confirm}>\n      <h3 className={css.confirm__head}>Confirm</h3>\n      <p\n        className={css.confirm__text}\n      >{`Do you really want to delete the contact ${contactName}?`}</p>\n      <div className={css.confirm__buttonBox}>\n        <button className={css.confirm__button} onClick={onConfirmed}>\n          Yes\n        </button>\n        <button className={css.confirm__button} onClick={onNotConfirmed}>\n          No\n        </button>\n      </div>\n    </div>\n  );\n};\n\nexport default Confirm;\n","import PropTypes from 'prop-types';\nimport { FaTrash, FaPen } from 'react-icons/fa';\nimport css from './ContactItem.module.css';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { deleteContact } from 'Redux/contacts/operations';\nimport { selectCurrentContactId, selectIsDeleting } from 'Redux/contacts/selectors';\nimport { useShowModalWithCloseAnimation } from 'hooks';\nimport Modal from 'components/Modal/Modal';\nimport ContactForm from 'components/ContactForm';\nimport Confirm from 'components/Confirm/Confirm';\nimport { Loader } from 'components/Loader/Loader';\nimport { useState } from 'react';\nimport { showNotify } from 'js/notifyFunc';\n\nconst ContactItem = ({ name, number, contactId }) => {\n  const {\n    showModal,\n    backdropRef,\n    contentRef,\n    onAnimationEnd,\n    setAfterCloseAnimationHandler,\n    onToggleModal,\n  } = useShowModalWithCloseAnimation();\n\n  const [action, setAction] = useState(null);\n\n  const dispatch = useDispatch();\n  const isDeleting = useSelector(selectIsDeleting);\n  const currentContactId = useSelector(selectCurrentContactId);\n\n  const handleActionContact = ({ currentTarget: { tagName, name } }) => {\n    if (tagName !== 'BUTTON') {\n      return;\n    }\n\n    setAction(name);\n    onToggleModal();\n  };\n\n  const handleDeleteContact = async () => {\n    const operationResult = await dispatch(deleteContact(contactId));\n    if (operationResult.error) {\n      showNotify(operationResult.payload.message, 'failure');\n      return;\n    }\n\n    showNotify('Successful!', 'succsess');\n  };\n\n  const onDeleteConfirmed = () => {\n    setAfterCloseAnimationHandler(handleDeleteContact);\n    onToggleModal();\n  };\n\n  return (\n    <li className={css.contactItem}>\n      <div>\n        <p className={css.caption}>Name: {name}</p>\n        <p className={css.caption}>Number: {number}</p>\n      </div>\n\n      <div className={css.buttonContainer}>\n        <button\n          disabled={isDeleting}\n          type=\"button\"\n          name=\"update\"\n          className={css.button}\n          onClick={handleActionContact}\n        >\n          <FaPen />\n        </button>\n        <button\n          disabled={isDeleting}\n          type=\"button\"\n          name=\"delete\"\n          className={css.button}\n          onClick={handleActionContact}\n        >\n          {isDeleting && contactId === currentContactId ? (\n            <Loader\n              size=\"20px\"\n              color=\"var(--primary-dark-color)\"\n              secondaryColor=\"var(--primary-dark-color)\"\n            />\n          ) : (\n            <FaTrash />\n          )}\n        </button>\n      </div>\n      {showModal && (\n        <Modal\n          onClose={onToggleModal}\n          onAnimationEnd={onAnimationEnd}\n          backdropRef={backdropRef}\n          contentRef={contentRef}\n        >\n          {action === 'delete' && (\n            <Confirm\n              contactName={name}\n              onConfirmed={onDeleteConfirmed}\n              onNotConfirmed={onToggleModal}\n            />\n          )}\n\n          {action === 'update' && (\n            <ContactForm\n              onCloseModal={onToggleModal}\n              currentContact={{ name, number, contactId }}\n            />\n          )}\n        </Modal>\n      )}\n    </li>\n  );\n};\n\nContactItem.propTypes = {\n  name: PropTypes.string.isRequired,\n  number: PropTypes.string.isRequired,\n  contactId: PropTypes.string.isRequired,\n};\n\nexport default ContactItem;\n","// extracted by mini-css-extract-plugin\nexport default {\"message\":\"Message_message__fh13J\"};","import css from './Message.module.css';\n\nconst Message = ({ message, children }) => {\n  return <p className={css.message}>{message ?? children}</p>;\n};\n\nexport default Message;\n","// extracted by mini-css-extract-plugin\nexport default {\"contactList\":\"ContactList_contactList__UFVCg\"};","import { Loader } from 'components/Loader/Loader';\nimport ContactItem from '../ContactItem';\nimport Message from 'components/Message/Message';\nimport css from './ContactList.module.css';\nimport { useSelector } from 'react-redux';\nimport { selectVisibleContacts, selectIsFetching, selectError } from 'Redux/contacts/selectors';\n\nconst ContactList = () => {\n  const { items, allLength } = useSelector(selectVisibleContacts);\n  const isFetching = useSelector(selectIsFetching);\n  const error = useSelector(selectError);\n\n  return (\n    <>\n      <Message>\n        {error && error.message + '\\n'}\n        {!isFetching && !error && !allLength && 'The contact list is empty!\\n'}\n        {!items.length && !!allLength && 'No matches found!\\n'}\n      </Message>\n      {isFetching ? (\n        <Loader />\n      ) : (\n        <ul className={css.contactList}>\n          {items.map(({ id, name, number }) => (\n            <ContactItem key={id} name={name} number={number} contactId={id} />\n          ))}\n        </ul>\n      )}\n    </>\n  );\n};\n\nexport default ContactList;\n","// extracted by mini-css-extract-plugin\nexport default {\"controlPanelBox\":\"ControlPanel_controlPanelBox__HVdks\"};","// extracted by mini-css-extract-plugin\nexport default {\"addButton\":\"AddButton_addButton__err1-\"};","import css from './AddButton.module.css';\nimport { MdAddIcCall } from 'react-icons/md';\nimport { useShowModalWithCloseAnimation } from 'hooks';\nimport Modal from 'components/Modal/Modal';\nimport ContactForm from 'components/ContactForm';\n\nconst AddButton = () => {\n  const { showModal, backdropRef, contentRef, onAnimationEnd, onToggleModal } =\n    useShowModalWithCloseAnimation();\n\n  return (\n    <>\n      <button className={css.addButton} onClick={onToggleModal}>\n        <MdAddIcCall size={40} />\n      </button>\n\n      {showModal && (\n        <Modal\n          onClose={onToggleModal}\n          onAnimationEnd={onAnimationEnd}\n          backdropRef={backdropRef}\n          contentRef={contentRef}\n        >\n          <ContactForm onCloseModal={onToggleModal} />\n        </Modal>\n      )}\n    </>\n  );\n};\n\nexport default AddButton;\n","import css from './ControlPanel.module.css';\nimport AddButton from 'components/AddButton/AddButton';\n\nconst ControlPanel = () => {\n  return (\n    <div className={css.controlPanelBox}>\n      <AddButton />\n    </div>\n  );\n};\n\nexport default ControlPanel;\n","// extracted by mini-css-extract-plugin\nexport default {\"filterBox\":\"Filter_filterBox__A-UPt\"};","import css from './Filter.module.css';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { changeFilter } from 'Redux/filter/filterSlice';\nimport { selectFilter } from 'Redux/filter/selectors';\nimport Input from 'components/Input/Input';\n\nconst Filter = () => {\n  const filter = useSelector(selectFilter);\n  const dispatch = useDispatch();\n\n  const handleChangeFilter = ({ target: { value } }) => dispatch(changeFilter(value));\n\n  return (\n    <div className={css.filterBox}>\n      <Input\n        label=\"Find contacts by name\"\n        type=\"text\"\n        name=\"filter\"\n        pattern=\"^[A-Za-z\\u0080-\\uFFFF\\- ']+$\"\n        title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n        onChange={handleChangeFilter}\n        value={filter}\n      />\n    </div>\n  );\n};\n\nexport default Filter;\n","import { useEffect } from 'react';\nimport ContactList from 'components/ContactList/ContactList';\nimport ControlPanel from 'ControlPanel/ControlPanel';\nimport Filter from 'components/Filter/Filter';\nimport SectionWithContainer from 'components/SectionWithContainer/SectionWithContainer';\nimport Message from 'components/Message/Message';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { selectContacts, selectError, selectIsFetching } from 'Redux/contacts/selectors';\nimport { fetchContacts } from 'Redux/contacts/operations';\n\nconst ContactsPage = () => {\n  const dispatch = useDispatch();\n  const items = useSelector(selectContacts);\n  const isFetching = useSelector(selectIsFetching);\n  const error = useSelector(selectError);\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <>\n      <h1 className=\"visually-hidden\">Contacts</h1>\n\n      <SectionWithContainer headText=\"Control panel\" cssHeadClass=\"visually-hidden\">\n        <ControlPanel />\n      </SectionWithContainer>\n\n      <SectionWithContainer headText=\"Filter\" cssHeadClass=\"visually-hidden\">\n        <Filter />\n      </SectionWithContainer>\n\n      <SectionWithContainer headText=\"Contact list\" cssHeadClass=\"visually-hidden\">\n        {!error && !isFetching && !items.length ? (\n          <Message message=\"The contact list is empty!\" />\n        ) : (\n          <ContactList />\n        )}\n      </SectionWithContainer>\n    </>\n  );\n};\n\nexport default ContactsPage;\n"],"names":["selectContacts","state","contacts","items","selectIsDeleting","isDeleting","selectIsLoading","isLoading","selectIsFetching","isFetching","selectError","error","selectCurrentContactId","currentContactId","selectVisibleContacts","createSelector","selectFilter","filter","name","toLowerCase","includes","allLength","length","buttonCaption","onSubmit","children","useState","isDisabledButton","setIsDisabledButton","useSelector","handleFormSubmit","e","preventDefault","className","css","disabled","type","Loader","size","strokeSize","color","secondaryColor","onChange","label","title","pattern","required","minLength","value","inputId","useRef","nanoid","htmlFor","current","id","headText","headType","HeadType","cssClass","isHeadHas","cssHeadClass","currentContact","onCloseModal","setName","number","setNumber","dispatch","useDispatch","handleCreateContactData","contactData","Object","entries","pair","handleSubmit","some","contactName","showNotify","keys","updateContact","contactId","updData","addContact","operationResult","payload","message","reset","handleChange","target","Form","Input","onConfirmed","onNotConfirmed","onClick","useShowModalWithCloseAnimation","showModal","backdropRef","contentRef","onAnimationEnd","setAfterCloseAnimationHandler","onToggleModal","action","setAction","handleActionContact","currentTarget","tagName","handleDeleteContact","deleteContact","Modal","onClose","map","changeFilter","useEffect","fetchContacts","SectionWithContainer"],"sourceRoot":""}