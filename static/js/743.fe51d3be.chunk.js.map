{"version":3,"file":"static/js/743.fe51d3be.chunk.js","mappings":"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","sources":["webpack://phonebook-frontend/./src/components/Form/Form.module.css?89ba","components/Form/Form.jsx","webpack://phonebook-frontend/./src/components/Input/Input.module.css?1f33","components/Input/Input.jsx","Redux/contacts/selectors.js","components/ContactForm/ContactForm.jsx","webpack://phonebook-frontend/./src/components/ContactItem/ContactItem.module.css?be2b","components/ContactItem/ContactItem.jsx","webpack://phonebook-frontend/./src/components/ContactList/ContactList.module.css?1ce0","Redux/filter/selectors.js","components/ContactList/ContactList.jsx","webpack://phonebook-frontend/./src/components/Filter/Filter.module.css?fad1","components/Filter/Filter.jsx","pages/ContactsPage.jsx","webpack://phonebook-frontend/./src/components/App/App.module.css?583a"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"form\":\"Form_form__e1yzW\",\"button\":\"Form_button__8NOIT\"};","import css from './Form.module.css';\n\nconst Form = ({ buttonCaption, onSubmit, children }) => {\n  return (\n    <form className={css.form} onSubmit={onSubmit}>\n      {children}\n      <button className={css.button} type=\"submit\">\n        {buttonCaption}\n      </button>\n    </form>\n  );\n};\n\nexport default Form;\n","// extracted by mini-css-extract-plugin\nexport default {\"label\":\"Input_label__NXpCD\",\"input\":\"Input_input__E5rzA\"};","import { useRef } from 'react';\nimport { nanoid } from 'nanoid';\nimport css from './Input.module.css';\n\nconst Input = ({\n  onChange,\n  type = 'text',\n  name = '',\n  label,\n  title,\n  pattern,\n  required = true,\n  minLength,\n  value,\n}) => {\n  const inputId = useRef(nanoid());\n  return (\n    <>\n      {label && (\n        <label htmlFor={inputId.current} className={css.label}>\n          {label}\n        </label>\n      )}\n      <input\n        id={inputId.current}\n        className={css.input}\n        type={type}\n        name={name}\n        value={value}\n        pattern={pattern}\n        title={title}\n        required={required}\n        onChange={onChange}\n        minLength={minLength}\n      />\n    </>\n  );\n};\n\nexport default Input;\n","const selectContacts = state => state.contacts;\n\nexport {selectContacts}\n","import { useState } from 'react';\nimport { nanoid } from 'nanoid';\nimport { addContact } from 'Redux/contacts/operations';\nimport { selectContacts } from 'Redux/contacts/selectors';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { showNotifyReport } from 'js/notifyFunc';\nimport Input from 'components/Input/Input';\nimport Form from 'components/Form/Form';\n\nconst ContactForm = () => {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n  const { items } = useSelector(selectContacts);\n  const dispatch = useDispatch();\n\n  const handleSubmit = event => {\n    event.preventDefault();\n\n    items.some(({ name: contactName }) => contactName.toLowerCase() === name.toLowerCase())\n      ? showNotifyReport(`${name} is already in contact`, 'reportWarning')\n      : dispatch(addContact({ id: nanoid(), name, number }));\n\n    reset();\n  };\n\n  const handleChange = ({ target: { name, value } }) => {\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n      case 'number':\n        setNumber(value);\n        break;\n      default:\n        return;\n    }\n  };\n\n  const reset = () => {\n    setName('');\n    setNumber('');\n  };\n\n  return (\n    <Form buttonCaption=\"Add contact\" onSubmit={handleSubmit}>\n      <Input\n        label=\"Name\"\n        type=\"text\"\n        name=\"name\"\n        pattern=\"^[A-Za-z\\u0080-\\uFFFF\\- ']+$\"\n        title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n        onChange={handleChange}\n        value={name}\n      />\n\n      <Input\n        label=\"Number\"\n        type=\"tel\"\n        name=\"number\"\n        pattern=\"^(\\+?[0-9.\\(\\)\\-\\s]*)$\"\n        title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n        onChange={handleChange}\n        value={number}\n      />\n    </Form>\n  );\n};\n\nexport default ContactForm;\n","// extracted by mini-css-extract-plugin\nexport default {\"contactItem\":\"ContactItem_contactItem__Z4FuP\",\"caption\":\"ContactItem_caption__9hsJU\",\"buttonContainer\":\"ContactItem_buttonContainer__HxbMT\",\"button\":\"ContactItem_button__IRFBz\"};","import PropTypes from 'prop-types';\nimport { FaTrash, FaPen } from 'react-icons/fa';\nimport css from './ContactItem.module.css';\nimport { useDispatch } from 'react-redux';\nimport { deleteContact } from 'Redux/contacts/operations';\n\nconst ContactItem = ({ name, number, contactId }) => {\n  const dispatch = useDispatch();\n\n  const handleDeleteContact = () => dispatch(deleteContact(contactId));\n\n  return (\n    <li className={css.contactItem}>\n      <div>\n        <p className={css.caption}>Name: {name}</p>\n        <p className={css.caption}>Number: {number}</p>\n      </div>\n\n      <div className={css.buttonContainer}>\n        <button type=\"button\" className={css.button} onClick={() => {}}>\n          <FaPen />\n        </button>\n        <button type=\"button\" className={css.button} onClick={handleDeleteContact}>\n          <FaTrash />\n        </button>\n      </div>\n    </li>\n  );\n};\n\nContactItem.propTypes = {\n  name: PropTypes.string.isRequired,\n  number: PropTypes.string.isRequired,\n  contactId: PropTypes.string.isRequired,\n};\n\nexport default ContactItem;\n","// extracted by mini-css-extract-plugin\nexport default {\"contactList\":\"ContactList_contactList__UFVCg\"};","const selectFilter = state => state.filter;\n\nexport {selectFilter}","import ContactItem from '../ContactItem';\nimport css from './ContactList.module.css';\nimport { useSelector } from 'react-redux';\nimport { selectContacts } from 'Redux/contacts/selectors';\nimport { selectFilter } from 'Redux/filter/selectors';\n\nconst ContactList = () => {\n  const { items } = useSelector(selectContacts);\n  const filter = useSelector(selectFilter);\n\n  return (\n    <ul className={css.contactList}>\n      {items\n        .filter(({ name }) => name.toLowerCase().includes(filter.toLowerCase()))\n        .map(({ id, name, number }) => (\n          <ContactItem key={id} name={name} number={number} contactId={id} />\n        ))}\n    </ul>\n  );\n};\n\nexport default ContactList;\n","// extracted by mini-css-extract-plugin\nexport default {\"filterBox\":\"Filter_filterBox__A-UPt\"};","import css from './Filter.module.css';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { changeFilter } from 'Redux/filter/filterSlice';\nimport { selectFilter } from 'Redux/filter/selectors';\nimport Input from 'components/Input/Input';\n\nconst Filter = () => {\n  const filter = useSelector(selectFilter);\n  const dispatch = useDispatch();\n\n  const handleChangeFilter = ({ target: { value } }) => dispatch(changeFilter(value));\n\n  return (\n    <div className={css.filterBox}>\n      <Input\n        label=\"Find contacts by name\"\n        type=\"text\"\n        name=\"filter\"\n        pattern=\"^[A-Za-z\\u0080-\\uFFFF\\- ']+$\"\n        title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n        onChange={handleChangeFilter}\n        value={filter}\n      />\n    </div>\n  );\n};\n\nexport default Filter;\n","import { useEffect } from 'react';\nimport ContactForm from 'components/ContactForm/ContactForm';\nimport ContactList from 'components/ContactList/ContactList';\nimport Filter from 'components/Filter/Filter';\nimport css from 'components/App/App.module.css';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { selectContacts } from 'Redux/contacts/selectors';\nimport { fetchContacts } from 'Redux/contacts/operations';\n\nconst ContactsPage = () => {\n  const dispatch = useDispatch();\n  const { items, isLoading, error } = useSelector(selectContacts);\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <>\n      <h1 className={css.appTitle}>Phonebook</h1>\n\n      <ContactForm />\n\n      <h2 className={css.title}>Contacts:</h2>\n\n      <Filter />\n\n      {isLoading && <p className={css.info}>Loading...</p>}\n\n      {error && <p className={css.info}>{error}</p>}\n\n      {!error && !isLoading && !items.length ? (\n        <p className={css.info}>The contact list is empty!</p>\n      ) : (\n        <ContactList />\n      )}\n    </>\n  );\n};\n\nexport default ContactsPage;\n","// extracted by mini-css-extract-plugin\nexport default {\"app\":\"App_app__6Ra7L\",\"appTitle\":\"App_appTitle__R-ohI\",\"info\":\"App_info__qU+g4\"};"],"names":["buttonCaption","onSubmit","children","className","css","type","onChange","name","label","title","pattern","required","minLength","value","inputId","useRef","nanoid","htmlFor","current","id","selectContacts","state","contacts","useState","setName","number","setNumber","items","useSelector","dispatch","useDispatch","handleChange","target","reset","Form","event","preventDefault","some","toLowerCase","showNotifyReport","addContact","Input","contactId","onClick","deleteContact","selectFilter","filter","includes","map","changeFilter","isLoading","error","useEffect","fetchContacts","length"],"sourceRoot":""}